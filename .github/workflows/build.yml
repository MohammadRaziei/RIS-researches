name: Build LaTeX document
on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - "*"
    tags:
      - "*"


permissions:
  contents: write

env:
    BRANCH_NAME: '${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}'

jobs:
  build_latex:
    runs-on: ubuntu-latest
    if: ${{!startsWith(github.event.head_commit.message, 'skip-build') }}
    
    steps:
      - name: Set up Git repository
        uses: actions/checkout@v3
        with:
          lfs: 'true'


      - name: Preview files
        run: tree --du -shaC .

      # - name: Download Fonts
      #   uses: robinraju/release-downloader@v1.8
      #   with:
      #     tag: "Latex-lite"
      #     # Choose what fonts you need from https://github.com/MohammadRaziei/fonts/releases
      #     repository: "mohammadraziei/fonts"
      #     fileName: "fonts.zip"
      #     out-file-path: "fonts"
      #     extract: true

      - name: Compile LaTeX document
        uses: xu-cheng/latex-action@v3
        continue-on-error: true
        with:
          root_file: presentation.tex
          latexmk_use_xelatex: true
          latexmk_shell_escape: true
          # extra_fonts: ./fonts/*.ttf
          args: -synctex=1 -interaction=nonstopmode -f
          post_compile: echo ">> DONE <<" && cat presentation.log


      - name: Rename Output
        run: mv presentation.pdf ${BRANCH_NAME}.pdf

      - name: Upload LOG files
        uses: actions/upload-artifact@v3
        with:
          name: LOG
          path: |
            presentation.log

      - name: Upload PDF file
        uses: actions/upload-artifact@v3
        with:
          name: PDF
          path: ${BRANCH_NAME}.pdf
          if-no-files-found: error

  preview:
    name: Preview
    needs: [ build_latex ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with: # download all PDF files
          name: PDF
      - name: Preview
        uses: softprops/action-gh-release@v1
        with:
          prerelease: true
          tag_name: "__preview__"
          files: |
            *.pdf


  release:
    name: Upload Release Asset
    needs: [ build_latex ]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/download-artifact@v3
        with: # download all PDF files
          name: PDF

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            *.pdf
